// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EventListed extends ethereum.Event {
  get params(): EventListed__Params {
    return new EventListed__Params(this);
  }
}

export class EventListed__Params {
  _event: EventListed;

  constructor(event: EventListed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get regFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EventApp__listedEventsResult {
  value0: string;
  value1: BigInt;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;

  constructor(
    value0: string,
    value1: BigInt,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    return map;
  }

  getTheme(): string {
    return this.value0;
  }

  getId(): BigInt {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getRegFee(): BigInt {
    return this.value3;
  }

  getStarting(): BigInt {
    return this.value4;
  }

  getEnding(): BigInt {
    return this.value5;
  }

  getRaised(): BigInt {
    return this.value6;
  }

  getWithdrawn(): boolean {
    return this.value7;
  }
}

export class EventApp extends ethereum.SmartContract {
  static bind(address: Address): EventApp {
    return new EventApp("EventApp", address);
  }

  cUsd(): Address {
    let result = super.call("cUsd", "cUsd():(address)", []);

    return result[0].toAddress();
  }

  try_cUsd(): ethereum.CallResult<Address> {
    let result = super.tryCall("cUsd", "cUsd():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  listedEvents(param0: BigInt): EventApp__listedEventsResult {
    let result = super.call(
      "listedEvents",
      "listedEvents(uint256):(string,uint256,address,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new EventApp__listedEventsResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean()
    );
  }

  try_listedEvents(
    param0: BigInt
  ): ethereum.CallResult<EventApp__listedEventsResult> {
    let result = super.tryCall(
      "listedEvents",
      "listedEvents(uint256):(string,uint256,address,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EventApp__listedEventsResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ListEventCall extends ethereum.Call {
  get inputs(): ListEventCall__Inputs {
    return new ListEventCall__Inputs(this);
  }

  get outputs(): ListEventCall__Outputs {
    return new ListEventCall__Outputs(this);
  }
}

export class ListEventCall__Inputs {
  _call: ListEventCall;

  constructor(call: ListEventCall) {
    this._call = call;
  }

  get _theme(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _regFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _starting(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _ending(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ListEventCall__Outputs {
  _call: ListEventCall;

  constructor(call: ListEventCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class WithdrawEventCall extends ethereum.Call {
  get inputs(): WithdrawEventCall__Inputs {
    return new WithdrawEventCall__Inputs(this);
  }

  get outputs(): WithdrawEventCall__Outputs {
    return new WithdrawEventCall__Outputs(this);
  }
}

export class WithdrawEventCall__Inputs {
  _call: WithdrawEventCall;

  constructor(call: WithdrawEventCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawEventCall__Outputs {
  _call: WithdrawEventCall;

  constructor(call: WithdrawEventCall) {
    this._call = call;
  }
}
